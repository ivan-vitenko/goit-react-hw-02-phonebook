{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["nameIsAlreadyAdded","ContactForm","state","name","number","handleChange","e","inputName","target","setState","value","resetState","addContact","contact","id","uuid","props","contacts","duplicate小heck","map","item","toLowerCase","includes","alert","handleSubmit","preventDefault","this","onSubmit","type","placeholder","onChange","Component","Filter","filter","ContactList","deleteContact","contactId","appThis","prevState","onClick","App","Boolean","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca96068d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nlet nameIsAlreadyAdded = false;\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    // nameIsAlreadyAdded: false,\n  };\n\n  //   handleChange = e => {\n  //     const inputName = e.target.name;\n  //     this.setState({ [inputName]: e.target.value });\n  //   };\n\n  handleChange = e => {\n    const inputName = e.target.name;\n    this.setState({ [inputName]: e.target.value });\n\n    if (inputName === 'name') {\n      nameIsAlreadyAdded = false;\n    }\n  };\n\n  resetState = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  //   addContact = () => {\n  //     const contact = {\n  //       id: uuid(),\n  //       name: this.state.name,\n  //       number: this.state.number,\n  //     };\n\n  //     if (!this.state.nameIsAlreadyAdded) {\n  //       this.props.contacts.setState(({ contacts }) => ({\n  //         contacts: [contact, ...contacts],\n  //       }));\n\n  //       this.resetState();\n  //     }\n  //   };\n\n  addContact = () => {\n    const contact = {\n      id: uuid(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    if (!nameIsAlreadyAdded) {\n      this.props.contacts.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n\n      this.resetState();\n    }\n  };\n\n  duplicate小heck = () => {\n    if (this.state.name && this.state.number) {\n      this.props.contacts.state.contacts.map(item => {\n        if (item.name.toLowerCase().includes(this.state.name.toLowerCase())) {\n          alert(`${item.name} is already in contacts.`);\n          nameIsAlreadyAdded = true;\n        }\n      });\n    }\n    this.addContact();\n  };\n\n  //   duplicate小heck = () => {\n  //     if (this.state.name && this.state.number) {\n  //       this.props.contacts.state.contacts.map(item => {\n  //         if (item.name.toLowerCase().includes(this.state.name.toLowerCase())) {\n  //           alert(`${item.name} is already in contacts.`);\n  //           this.setState({ nameIsAlreadyAdded: true }, this.resetState);\n  //         } else {\n  //           return;\n  //         }\n  //       });\n  //     }\n  //     this.addContact();\n  //   };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.duplicate小heck();\n  };\n\n  render() {\n    const { name } = this.state;\n    const { number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <label>\n          Phone number\n          <input\n            name=\"number\"\n            type=\"number\"\n            placeholder=\"Enter number\"\n            value={number}\n            onChange={this.handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React, { Component } from 'react';\n\nclass Filter extends Component {\n  handleChange = e => {\n    const inputName = e.target.name;\n    this.props.filter.setState({ [inputName]: e.target.value });\n  };\n\n  render() {\n    return (\n      <label>\n        Find contact by name\n        <input\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Enter to find\"\n          value={this.props.filter.state.filter}\n          onChange={this.handleChange}\n        />\n      </label>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nclass ContactList extends Component {\n  deleteContact = contactId => {\n    this.props.appThis.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    return (\n      <ul>\n        {this.props.appThis.state.contacts.map(\n          item =>\n            item.name\n              .toLowerCase()\n              .includes(this.props.appThis.state.filter.toLowerCase()) && (\n              <li key={item.id}>\n                {item.name}: {item.number}{' '}\n                <button\n                  type=\"button\"\n                  onClick={() => this.deleteContact(item.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            ),\n        )}\n      </ul>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleChange = e => {\n    const inputName = e.target.name;\n    this.setState({ [inputName]: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm contacts={this} />\n\n        <h2>Contacts</h2>\n        {Boolean(this.state.contacts.length) && (\n          <div>\n            <Filter filter={this} />\n\n            <ContactList\n              appThis={this}\n              // contacts={this.state.contacts}\n              // filter={this.state.filter}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}